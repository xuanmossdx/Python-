import pygame
import random

# 初始化Pygame库
pygame.init()

# 定义一些颜色
BLACK = (0, 0, 0)
WHITE = (255, 255, 255)
RED = (255, 0, 0)
GREEN = (0, 255, 0)
BLUE = (0, 0, 255)

# 设置窗口大小
SCREEN_WIDTH = 600
SCREEN_HEIGHT = 600
screen = pygame.display.set_mode((SCREEN_WIDTH, SCREEN_HEIGHT))
pygame.display.set_caption("贪吃蛇")

# 设置字体
font = pygame.font.SysFont(None, 25)

# 定义蛇的一些属性
snake_block_size = 10
snake_speed = 20

# 定义难度
easy = 1
medium = 2
hard = 3

# 定义一个函数，用于显示分数
def show_score(score):
    score_text = font.render("Score: " + str(score), True, WHITE)
    screen.blit(score_text, [0, 0])

# 定义一个函数，用于显示消息
def show_message(message):
    message_text = font.render(message, True, WHITE)
    screen.blit(message_text, [SCREEN_WIDTH/6, SCREEN_HEIGHT/3])

# 定义一个函数，用于绘制蛇
def draw_snake(snake_block_size, snake_list):
    for x in snake_list:
        pygame.draw.rect(screen, GREEN, [x[0], x[1], snake_block_size, snake_block_size])

# 定义一个函数，用于显示主菜单
def show_menu():
    while True:
        screen.fill(BLACK)
        show_message("Welcome to Snake Game")
        show_message("Press Space to Play")
        show_message("Press Q to Quit")
        pygame.display.update()
        for event in pygame.event.get():
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_q:
                    pygame.quit()
                    quit()
                if event.key == pygame.K_SPACE:
                    return

# 定义一个函数，用于选择难度
def choose_difficulty():
    while True:
        screen.fill(BLACK)
        show_message("Choose Difficulty Level")
        show_message("Press 1 for Easy")
        show_message("Press 2 for Medium")
        show_message("Press 3 for Hard")
        pygame.display.update()
        for event in pygame.event.get():
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_1:
                    return easy
                if event.key == pygame.K_2:
                    return medium
                if event.key == pygame.K_3:
                    return hard

# 定义一个函数，用于运行游戏
def game_loop():
    game_over = False
    game_close = False

    # 初始化蛇的位置
    x1 = SCREEN_WIDTH / 2
    y1 = SCREEN_HEIGHT / 2

    # 初始化蛇的移动方向
    x1_change = 0
    y1_change = 0

# 初始化蛇的身体
snake_list = []
Length_of_snake = 1

# 生成食物的初始位置
foodx = round(random.randrange(0, SCREEN_WIDTH - snake_block_size) / 10.0) * 10.0
foody = round(random.randrange(0, SCREEN_HEIGHT - snake_block_size) / 10.0) * 10.0

# 游戏循环
while not game_over:

    while game_close == True:
        screen.fill(BLACK)
        show_message("Game Over! Press C-Play Again or Q-Quit")
        pygame.display.update()

        for event in pygame.event.get():
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_q:
                    pygame.quit()
                    quit()
                if event.key == pygame.K_c:
                    game_loop()

    for event in pygame.event.get():
        if event.type == pygame.QUIT:
            pygame.quit()
            quit()
        if event.type == pygame.KEYDOWN:
            if event.key == pygame.K_LEFT:
                x1_change = -snake_block_size
                y1_change = 0
            elif event.key == pygame.K_RIGHT:
                x1_change = snake_block_size
                y1_change = 0
            elif event.key == pygame.K_UP:
                y1_change = -snake_block_size
                x1_change = 0
            elif event.key == pygame.K_DOWN:
                y1_change = snake_block_size
                x1_change = 0

    # 检查蛇是否超出边界
    if x1 >= SCREEN_WIDTH or x1 < 0 or y1 >= SCREEN_HEIGHT or y1 < 0:
        game_close = True
    x1 += x1_change
    y1 += y1_change
    screen.fill(BLACK)
    pygame.draw.rect(screen, BLUE, [foodx, foody, snake_block_size, snake_block_size])
    draw_snake(snake_block_size, snake_list)
    show_score(Length_of_snake - 1)

    # 检查蛇是否吃到食物
    if x1 == foodx and y1 == foody:
        foodx = round(random.randrange(0, SCREEN_WIDTH - snake_block_size) / 10.0) * 10.0
        foody = round(random.randrange(0, SCREEN_HEIGHT - snake_block_size) / 10.0) * 10.0
        Length_of_snake += 1

    # 检查蛇是否碰到自己
    for segment in snake_list[:-1]:
        if segment == [x1, y1]:
            game_close = True

    pygame.display.update()

    # 控制游戏速度
    pygame.time.Clock().tick(snake_speed)

pygame.quit()
quit()
＃主程序入口
if name == "main":
show_menu()
difficulty = choose_difficulty()
if difficulty == easy:
snake_speed = 10
elif difficulty == medium:
snake_speed = 15
elif difficulty == hard:
snake_speed = 20
game_loop()
